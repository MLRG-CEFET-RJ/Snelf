def run():
    # -*- coding: utf-8 -*-
    """pre_proc_anvisa.ipynb

    Automatically generated by Colaboratory.

    Original file is located at
        https://colab.research.google.com/drive/1UdRX5tiG75EozlTUB3IS9Xg-FAJy_JFT

    ## Pré-processamento da base de dados ANVISA

    ### Carregando a base de dados
    """

    import pandas as pd

    data_path = 'datasets/anvisa/'
    data_file = 'TA_PRECOS_MEDICAMENTOS.csv'

    cols = [4, 5, 6, 8]
    df = pd.read_csv('{}{}'.format(data_path, data_file),
                     sep=';',
                     usecols=cols,
                     encoding='iso-8859-1')
    df.shape

    cols = ['ean', 'produto', 'apresentacao', 'principio_ativo']
    df.columns = cols
    df.head()

    """### Removendo registros que não possuem o atributo EAN

    Se não possui EAN ou EAN é inválido, DROP
    """

    # Removendo rows com EAN nulo
    df.dropna(subset=['ean'], inplace=True)
    df.shape

    # Removendo rows em que o EAN não é numérico
    df = df[df['ean'].str.isdigit()]
    df.shape

    # Removendo rows com EANs inválidos (conforme regra do cálculo do dígito verificador)
    def is_ean_valid(row):
        return not sum(int(d) * i for d, i in zip(row['ean'], [1, 3] * 7)) % 10

    indices = df.apply(is_ean_valid, axis=1)
    df = df[indices]
    df.shape

    """### Removendo registros que não possuem o atributo apresentação"""

    df.dropna(subset=['apresentacao'], inplace=True)
    df.shape

    non_values = ['NC/NI', 'SI/NC']
    df[df['apresentacao'].isin(non_values)]

    """### Removendo registros que não possuem os atributos produto e principio ativo (conectivo AND)

    Se não possui produto e principio ativo, DROP (se tiver pelo menos um dos dois não dropa)
    """

    df.dropna(subset=['produto', 'principio_ativo'], how='all', inplace=True)
    df.shape

    df[df['produto'].isin(non_values) & df['principio_ativo'].isin(non_values)]

    """### UPPER"""

    df['produto'] = df['produto'].str.upper()
    df['apresentacao'] = df['apresentacao'].str.upper()
    df['principio_ativo'] = df['principio_ativo'].str.upper()

    """### Removendo duplicatas"""

    df[df.duplicated()].head()

    df[df['apresentacao'] == 'EV 3,5MG/ML SOL INJ CT 6 AMP VD AMB X 20ML']

    df.drop_duplicates(inplace=True)
    df.shape

    """### Estatisticas"""

    df.count()

    df['ean'].unique().shape

    """### Gravando em arquivo"""

    data_file = 'anvisa.csv'

    pd.DataFrame(df).to_csv('{}{}'.format(data_path, data_file),
                            sep=';',
                            index=False,
                            encoding='utf-8')